// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: E477KV.proto

#include "E477KV.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_E477KV_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_E477KV_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_getRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_E477KV_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_getResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_E477KV_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_putRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_E477KV_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_putResponse;
}  // namespace protobuf_E477KV_2eproto
namespace E477KV {
class kvRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<kvRequest>
      _instance;
  const ::E477KV::putRequest* putargs_;
  const ::E477KV::getRequest* getargs_;
} _kvRequest_default_instance_;
class putRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<putRequest>
      _instance;
} _putRequest_default_instance_;
class getRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<getRequest>
      _instance;
} _getRequest_default_instance_;
class kvResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<kvResponse>
      _instance;
  const ::E477KV::putResponse* putres_;
  const ::E477KV::getResponse* getres_;
} _kvResponse_default_instance_;
class putResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<putResponse>
      _instance;
} _putResponse_default_instance_;
class getResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<getResponse>
      _instance;
} _getResponse_default_instance_;
}  // namespace E477KV
namespace protobuf_E477KV_2eproto {
static void InitDefaultskvRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477KV::_kvRequest_default_instance_;
    new (ptr) ::E477KV::kvRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477KV::kvRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_kvRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultskvRequest}, {
      &protobuf_E477KV_2eproto::scc_info_putRequest.base,
      &protobuf_E477KV_2eproto::scc_info_getRequest.base,}};

static void InitDefaultsputRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477KV::_putRequest_default_instance_;
    new (ptr) ::E477KV::putRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477KV::putRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_putRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsputRequest}, {}};

static void InitDefaultsgetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477KV::_getRequest_default_instance_;
    new (ptr) ::E477KV::getRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477KV::getRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_getRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgetRequest}, {}};

static void InitDefaultskvResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477KV::_kvResponse_default_instance_;
    new (ptr) ::E477KV::kvResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477KV::kvResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_kvResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultskvResponse}, {
      &protobuf_E477KV_2eproto::scc_info_putResponse.base,
      &protobuf_E477KV_2eproto::scc_info_getResponse.base,}};

static void InitDefaultsputResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477KV::_putResponse_default_instance_;
    new (ptr) ::E477KV::putResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477KV::putResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_putResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsputResponse}, {}};

static void InitDefaultsgetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::E477KV::_getResponse_default_instance_;
    new (ptr) ::E477KV::getResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::E477KV::getResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_getResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsgetResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_kvRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_putRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_getRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_kvResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_putResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_getResponse.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::kvRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::kvRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::kvRequest, magic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::kvRequest, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::kvRequest, serial_),
  offsetof(::E477KV::kvRequestDefaultTypeInternal, putargs_),
  offsetof(::E477KV::kvRequestDefaultTypeInternal, getargs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::kvRequest, function_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::putRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::putRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::putRequest, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::getRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::getRequest, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::kvResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::kvResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::kvResponse, magic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::kvResponse, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::kvResponse, serial_),
  offsetof(::E477KV::kvResponseDefaultTypeInternal, putres_),
  offsetof(::E477KV::kvResponseDefaultTypeInternal, getres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::kvResponse, function_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::putResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::putResponse, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::getResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::getResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::E477KV::getResponse, value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::E477KV::kvRequest)},
  { 11, -1, sizeof(::E477KV::putRequest)},
  { 18, -1, sizeof(::E477KV::getRequest)},
  { 24, -1, sizeof(::E477KV::kvResponse)},
  { 35, -1, sizeof(::E477KV::putResponse)},
  { 41, -1, sizeof(::E477KV::getResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477KV::_kvRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477KV::_putRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477KV::_getRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477KV::_kvResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477KV::_putResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::E477KV::_getResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "E477KV.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014E477KV.proto\022\006E477KV\"\225\001\n\tkvRequest\022\r\n\005"
      "magic\030\001 \001(\r\022\017\n\007version\030\002 \001(\r\022\016\n\006serial\030\003"
      " \001(\r\022%\n\007putArgs\030\004 \001(\0132\022.E477KV.putReques"
      "tH\000\022%\n\007getArgs\030\005 \001(\0132\022.E477KV.getRequest"
      "H\000B\n\n\010function\"(\n\nputRequest\022\013\n\003key\030\001 \001("
      "\005\022\r\n\005value\030\002 \001(\014\"\031\n\ngetRequest\022\013\n\003key\030\001 "
      "\001(\005\"\226\001\n\nkvResponse\022\r\n\005magic\030\001 \001(\r\022\017\n\007ver"
      "sion\030\002 \001(\r\022\016\n\006serial\030\003 \001(\r\022%\n\006putRes\030\004 \001"
      "(\0132\023.E477KV.putResponseH\000\022%\n\006getRes\030\005 \001("
      "\0132\023.E477KV.getResponseH\000B\n\n\010function\"\035\n\013"
      "putResponse\022\016\n\006status\030\001 \001(\010\",\n\013getRespon"
      "se\022\016\n\006status\030\001 \001(\010\022\r\n\005value\030\002 \001(\014b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 481);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "E477KV.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_E477KV_2eproto
namespace E477KV {

// ===================================================================

void kvRequest::InitAsDefaultInstance() {
  ::E477KV::_kvRequest_default_instance_.putargs_ = const_cast< ::E477KV::putRequest*>(
      ::E477KV::putRequest::internal_default_instance());
  ::E477KV::_kvRequest_default_instance_.getargs_ = const_cast< ::E477KV::getRequest*>(
      ::E477KV::getRequest::internal_default_instance());
}
void kvRequest::set_allocated_putargs(::E477KV::putRequest* putargs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (putargs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      putargs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, putargs, submessage_arena);
    }
    set_has_putargs();
    function_.putargs_ = putargs;
  }
  // @@protoc_insertion_point(field_set_allocated:E477KV.kvRequest.putArgs)
}
void kvRequest::set_allocated_getargs(::E477KV::getRequest* getargs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (getargs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getargs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getargs, submessage_arena);
    }
    set_has_getargs();
    function_.getargs_ = getargs;
  }
  // @@protoc_insertion_point(field_set_allocated:E477KV.kvRequest.getArgs)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int kvRequest::kMagicFieldNumber;
const int kvRequest::kVersionFieldNumber;
const int kvRequest::kSerialFieldNumber;
const int kvRequest::kPutArgsFieldNumber;
const int kvRequest::kGetArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

kvRequest::kvRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477KV_2eproto::scc_info_kvRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477KV.kvRequest)
}
kvRequest::kvRequest(const kvRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&magic_, &from.magic_,
    static_cast<size_t>(reinterpret_cast<char*>(&serial_) -
    reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_has_function();
  switch (from.function_case()) {
    case kPutArgs: {
      mutable_putargs()->::E477KV::putRequest::MergeFrom(from.putargs());
      break;
    }
    case kGetArgs: {
      mutable_getargs()->::E477KV::getRequest::MergeFrom(from.getargs());
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:E477KV.kvRequest)
}

void kvRequest::SharedCtor() {
  ::memset(&magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serial_) -
      reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_has_function();
}

kvRequest::~kvRequest() {
  // @@protoc_insertion_point(destructor:E477KV.kvRequest)
  SharedDtor();
}

void kvRequest::SharedDtor() {
  if (has_function()) {
    clear_function();
  }
}

void kvRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* kvRequest::descriptor() {
  ::protobuf_E477KV_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477KV_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const kvRequest& kvRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477KV_2eproto::scc_info_kvRequest.base);
  return *internal_default_instance();
}


void kvRequest::clear_function() {
// @@protoc_insertion_point(one_of_clear_start:E477KV.kvRequest)
  switch (function_case()) {
    case kPutArgs: {
      delete function_.putargs_;
      break;
    }
    case kGetArgs: {
      delete function_.getargs_;
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FUNCTION_NOT_SET;
}


void kvRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:E477KV.kvRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serial_) -
      reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_function();
  _internal_metadata_.Clear();
}

bool kvRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477KV.kvRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 magic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &magic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .E477KV.putRequest putArgs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_putargs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .E477KV.getRequest getArgs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getargs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477KV.kvRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477KV.kvRequest)
  return false;
#undef DO_
}

void kvRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477KV.kvRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic = 1;
  if (this->magic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->magic(), output);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serial(), output);
  }

  // .E477KV.putRequest putArgs = 4;
  if (has_putargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_putargs(), output);
  }

  // .E477KV.getRequest getArgs = 5;
  if (has_getargs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_getargs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477KV.kvRequest)
}

::google::protobuf::uint8* kvRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477KV.kvRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic = 1;
  if (this->magic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->magic(), target);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serial(), target);
  }

  // .E477KV.putRequest putArgs = 4;
  if (has_putargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_putargs(), deterministic, target);
  }

  // .E477KV.getRequest getArgs = 5;
  if (has_getargs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_getargs(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477KV.kvRequest)
  return target;
}

size_t kvRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477KV.kvRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 magic = 1;
  if (this->magic() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->magic());
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serial());
  }

  switch (function_case()) {
    // .E477KV.putRequest putArgs = 4;
    case kPutArgs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.putargs_);
      break;
    }
    // .E477KV.getRequest getArgs = 5;
    case kGetArgs: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.getargs_);
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void kvRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477KV.kvRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const kvRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const kvRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477KV.kvRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477KV.kvRequest)
    MergeFrom(*source);
  }
}

void kvRequest::MergeFrom(const kvRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477KV.kvRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.magic() != 0) {
    set_magic(from.magic());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.serial() != 0) {
    set_serial(from.serial());
  }
  switch (from.function_case()) {
    case kPutArgs: {
      mutable_putargs()->::E477KV::putRequest::MergeFrom(from.putargs());
      break;
    }
    case kGetArgs: {
      mutable_getargs()->::E477KV::getRequest::MergeFrom(from.getargs());
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
}

void kvRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477KV.kvRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void kvRequest::CopyFrom(const kvRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477KV.kvRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool kvRequest::IsInitialized() const {
  return true;
}

void kvRequest::Swap(kvRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void kvRequest::InternalSwap(kvRequest* other) {
  using std::swap;
  swap(magic_, other->magic_);
  swap(version_, other->version_);
  swap(serial_, other->serial_);
  swap(function_, other->function_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata kvRequest::GetMetadata() const {
  protobuf_E477KV_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477KV_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void putRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int putRequest::kKeyFieldNumber;
const int putRequest::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

putRequest::putRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477KV_2eproto::scc_info_putRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477KV.putRequest)
}
putRequest::putRequest(const putRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  key_ = from.key_;
  // @@protoc_insertion_point(copy_constructor:E477KV.putRequest)
}

void putRequest::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ = 0;
}

putRequest::~putRequest() {
  // @@protoc_insertion_point(destructor:E477KV.putRequest)
  SharedDtor();
}

void putRequest::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void putRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* putRequest::descriptor() {
  ::protobuf_E477KV_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477KV_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const putRequest& putRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477KV_2eproto::scc_info_putRequest.base);
  return *internal_default_instance();
}


void putRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:E477KV.putRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ = 0;
  _internal_metadata_.Clear();
}

bool putRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477KV.putRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477KV.putRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477KV.putRequest)
  return false;
#undef DO_
}

void putRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477KV.putRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->key(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477KV.putRequest)
}

::google::protobuf::uint8* putRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477KV.putRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->key(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477KV.putRequest)
  return target;
}

size_t putRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477KV.putRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // int32 key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void putRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477KV.putRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const putRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const putRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477KV.putRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477KV.putRequest)
    MergeFrom(*source);
  }
}

void putRequest::MergeFrom(const putRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477KV.putRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.key() != 0) {
    set_key(from.key());
  }
}

void putRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477KV.putRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void putRequest::CopyFrom(const putRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477KV.putRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool putRequest::IsInitialized() const {
  return true;
}

void putRequest::Swap(putRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void putRequest::InternalSwap(putRequest* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata putRequest::GetMetadata() const {
  protobuf_E477KV_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477KV_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void getRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int getRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

getRequest::getRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477KV_2eproto::scc_info_getRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477KV.getRequest)
}
getRequest::getRequest(const getRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_ = from.key_;
  // @@protoc_insertion_point(copy_constructor:E477KV.getRequest)
}

void getRequest::SharedCtor() {
  key_ = 0;
}

getRequest::~getRequest() {
  // @@protoc_insertion_point(destructor:E477KV.getRequest)
  SharedDtor();
}

void getRequest::SharedDtor() {
}

void getRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* getRequest::descriptor() {
  ::protobuf_E477KV_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477KV_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const getRequest& getRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477KV_2eproto::scc_info_getRequest.base);
  return *internal_default_instance();
}


void getRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:E477KV.getRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_ = 0;
  _internal_metadata_.Clear();
}

bool getRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477KV.getRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477KV.getRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477KV.getRequest)
  return false;
#undef DO_
}

void getRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477KV.getRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477KV.getRequest)
}

::google::protobuf::uint8* getRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477KV.getRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 key = 1;
  if (this->key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477KV.getRequest)
  return target;
}

size_t getRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477KV.getRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 key = 1;
  if (this->key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477KV.getRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const getRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const getRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477KV.getRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477KV.getRequest)
    MergeFrom(*source);
  }
}

void getRequest::MergeFrom(const getRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477KV.getRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key() != 0) {
    set_key(from.key());
  }
}

void getRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477KV.getRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getRequest::CopyFrom(const getRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477KV.getRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getRequest::IsInitialized() const {
  return true;
}

void getRequest::Swap(getRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void getRequest::InternalSwap(getRequest* other) {
  using std::swap;
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata getRequest::GetMetadata() const {
  protobuf_E477KV_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477KV_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void kvResponse::InitAsDefaultInstance() {
  ::E477KV::_kvResponse_default_instance_.putres_ = const_cast< ::E477KV::putResponse*>(
      ::E477KV::putResponse::internal_default_instance());
  ::E477KV::_kvResponse_default_instance_.getres_ = const_cast< ::E477KV::getResponse*>(
      ::E477KV::getResponse::internal_default_instance());
}
void kvResponse::set_allocated_putres(::E477KV::putResponse* putres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (putres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      putres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, putres, submessage_arena);
    }
    set_has_putres();
    function_.putres_ = putres;
  }
  // @@protoc_insertion_point(field_set_allocated:E477KV.kvResponse.putRes)
}
void kvResponse::set_allocated_getres(::E477KV::getResponse* getres) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_function();
  if (getres) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      getres = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, getres, submessage_arena);
    }
    set_has_getres();
    function_.getres_ = getres;
  }
  // @@protoc_insertion_point(field_set_allocated:E477KV.kvResponse.getRes)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int kvResponse::kMagicFieldNumber;
const int kvResponse::kVersionFieldNumber;
const int kvResponse::kSerialFieldNumber;
const int kvResponse::kPutResFieldNumber;
const int kvResponse::kGetResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

kvResponse::kvResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477KV_2eproto::scc_info_kvResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477KV.kvResponse)
}
kvResponse::kvResponse(const kvResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&magic_, &from.magic_,
    static_cast<size_t>(reinterpret_cast<char*>(&serial_) -
    reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_has_function();
  switch (from.function_case()) {
    case kPutRes: {
      mutable_putres()->::E477KV::putResponse::MergeFrom(from.putres());
      break;
    }
    case kGetRes: {
      mutable_getres()->::E477KV::getResponse::MergeFrom(from.getres());
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:E477KV.kvResponse)
}

void kvResponse::SharedCtor() {
  ::memset(&magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serial_) -
      reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_has_function();
}

kvResponse::~kvResponse() {
  // @@protoc_insertion_point(destructor:E477KV.kvResponse)
  SharedDtor();
}

void kvResponse::SharedDtor() {
  if (has_function()) {
    clear_function();
  }
}

void kvResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* kvResponse::descriptor() {
  ::protobuf_E477KV_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477KV_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const kvResponse& kvResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477KV_2eproto::scc_info_kvResponse.base);
  return *internal_default_instance();
}


void kvResponse::clear_function() {
// @@protoc_insertion_point(one_of_clear_start:E477KV.kvResponse)
  switch (function_case()) {
    case kPutRes: {
      delete function_.putres_;
      break;
    }
    case kGetRes: {
      delete function_.getres_;
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FUNCTION_NOT_SET;
}


void kvResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:E477KV.kvResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serial_) -
      reinterpret_cast<char*>(&magic_)) + sizeof(serial_));
  clear_function();
  _internal_metadata_.Clear();
}

bool kvResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477KV.kvResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 magic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &magic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .E477KV.putResponse putRes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_putres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .E477KV.getResponse getRes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_getres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477KV.kvResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477KV.kvResponse)
  return false;
#undef DO_
}

void kvResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477KV.kvResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic = 1;
  if (this->magic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->magic(), output);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serial(), output);
  }

  // .E477KV.putResponse putRes = 4;
  if (has_putres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_putres(), output);
  }

  // .E477KV.getResponse getRes = 5;
  if (has_getres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_getres(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477KV.kvResponse)
}

::google::protobuf::uint8* kvResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477KV.kvResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 magic = 1;
  if (this->magic() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->magic(), target);
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serial(), target);
  }

  // .E477KV.putResponse putRes = 4;
  if (has_putres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_putres(), deterministic, target);
  }

  // .E477KV.getResponse getRes = 5;
  if (has_getres()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_getres(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477KV.kvResponse)
  return target;
}

size_t kvResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477KV.kvResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 magic = 1;
  if (this->magic() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->magic());
  }

  // uint32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serial());
  }

  switch (function_case()) {
    // .E477KV.putResponse putRes = 4;
    case kPutRes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.putres_);
      break;
    }
    // .E477KV.getResponse getRes = 5;
    case kGetRes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *function_.getres_);
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void kvResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477KV.kvResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const kvResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const kvResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477KV.kvResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477KV.kvResponse)
    MergeFrom(*source);
  }
}

void kvResponse::MergeFrom(const kvResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477KV.kvResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.magic() != 0) {
    set_magic(from.magic());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.serial() != 0) {
    set_serial(from.serial());
  }
  switch (from.function_case()) {
    case kPutRes: {
      mutable_putres()->::E477KV::putResponse::MergeFrom(from.putres());
      break;
    }
    case kGetRes: {
      mutable_getres()->::E477KV::getResponse::MergeFrom(from.getres());
      break;
    }
    case FUNCTION_NOT_SET: {
      break;
    }
  }
}

void kvResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477KV.kvResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void kvResponse::CopyFrom(const kvResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477KV.kvResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool kvResponse::IsInitialized() const {
  return true;
}

void kvResponse::Swap(kvResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void kvResponse::InternalSwap(kvResponse* other) {
  using std::swap;
  swap(magic_, other->magic_);
  swap(version_, other->version_);
  swap(serial_, other->serial_);
  swap(function_, other->function_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata kvResponse::GetMetadata() const {
  protobuf_E477KV_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477KV_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void putResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int putResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

putResponse::putResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477KV_2eproto::scc_info_putResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477KV.putResponse)
}
putResponse::putResponse(const putResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:E477KV.putResponse)
}

void putResponse::SharedCtor() {
  status_ = false;
}

putResponse::~putResponse() {
  // @@protoc_insertion_point(destructor:E477KV.putResponse)
  SharedDtor();
}

void putResponse::SharedDtor() {
}

void putResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* putResponse::descriptor() {
  ::protobuf_E477KV_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477KV_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const putResponse& putResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477KV_2eproto::scc_info_putResponse.base);
  return *internal_default_instance();
}


void putResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:E477KV.putResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear();
}

bool putResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477KV.putResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477KV.putResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477KV.putResponse)
  return false;
#undef DO_
}

void putResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477KV.putResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477KV.putResponse)
}

::google::protobuf::uint8* putResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477KV.putResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477KV.putResponse)
  return target;
}

size_t putResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477KV.putResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void putResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477KV.putResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const putResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const putResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477KV.putResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477KV.putResponse)
    MergeFrom(*source);
  }
}

void putResponse::MergeFrom(const putResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477KV.putResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
}

void putResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477KV.putResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void putResponse::CopyFrom(const putResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477KV.putResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool putResponse::IsInitialized() const {
  return true;
}

void putResponse::Swap(putResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void putResponse::InternalSwap(putResponse* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata putResponse::GetMetadata() const {
  protobuf_E477KV_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477KV_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void getResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int getResponse::kStatusFieldNumber;
const int getResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

getResponse::getResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_E477KV_2eproto::scc_info_getResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:E477KV.getResponse)
}
getResponse::getResponse(const getResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:E477KV.getResponse)
}

void getResponse::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
}

getResponse::~getResponse() {
  // @@protoc_insertion_point(destructor:E477KV.getResponse)
  SharedDtor();
}

void getResponse::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void getResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* getResponse::descriptor() {
  ::protobuf_E477KV_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477KV_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const getResponse& getResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_E477KV_2eproto::scc_info_getResponse.base);
  return *internal_default_instance();
}


void getResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:E477KV.getResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
  _internal_metadata_.Clear();
}

bool getResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:E477KV.getResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:E477KV.getResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:E477KV.getResponse)
  return false;
#undef DO_
}

void getResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:E477KV.getResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->status(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:E477KV.getResponse)
}

::google::protobuf::uint8* getResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:E477KV.getResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->status(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:E477KV.getResponse)
  return target;
}

size_t getResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:E477KV.getResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void getResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:E477KV.getResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const getResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const getResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:E477KV.getResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:E477KV.getResponse)
    MergeFrom(*source);
  }
}

void getResponse::MergeFrom(const getResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:E477KV.getResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void getResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:E477KV.getResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void getResponse::CopyFrom(const getResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:E477KV.getResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool getResponse::IsInitialized() const {
  return true;
}

void getResponse::Swap(getResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void getResponse::InternalSwap(getResponse* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata getResponse::GetMetadata() const {
  protobuf_E477KV_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_E477KV_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace E477KV
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477KV::kvRequest* Arena::CreateMaybeMessage< ::E477KV::kvRequest >(Arena* arena) {
  return Arena::CreateInternal< ::E477KV::kvRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477KV::putRequest* Arena::CreateMaybeMessage< ::E477KV::putRequest >(Arena* arena) {
  return Arena::CreateInternal< ::E477KV::putRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477KV::getRequest* Arena::CreateMaybeMessage< ::E477KV::getRequest >(Arena* arena) {
  return Arena::CreateInternal< ::E477KV::getRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477KV::kvResponse* Arena::CreateMaybeMessage< ::E477KV::kvResponse >(Arena* arena) {
  return Arena::CreateInternal< ::E477KV::kvResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477KV::putResponse* Arena::CreateMaybeMessage< ::E477KV::putResponse >(Arena* arena) {
  return Arena::CreateInternal< ::E477KV::putResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::E477KV::getResponse* Arena::CreateMaybeMessage< ::E477KV::getResponse >(Arena* arena) {
  return Arena::CreateInternal< ::E477KV::getResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
